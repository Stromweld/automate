
#!{{pkgPathFor "core/bash"}}/bin/bash -e

exec 2>&1
supermarket_path=$(hab pkg path chef/supermarket)

HOME="{{ pkg.svc_data_path }}"
export HOME

if [ -f "{{ pkg.svc_config_path }}/app_env.sh" ]; then
  . "{{ pkg.svc_config_path }}/app_env.sh"
else
  >&2 echo "No app env file found: '{{ pkg.svc_config_path }}app_env.sh'"
  >&2 echo "Have you not started this service (chef/supermarket) before?"
  >&2 echo ""
  >&2 echo "Aborting..."
  exit 1
fi

chown -R "{{ cfg.app.user }}":"{{ cfg.app.group }}" {{ pkg.svc_path }}

cd $supermarket_path/app


_bundle() {
  scaffolding_app_prefix="$(hab pkg path chef/supermarket)/app"
  cd $scaffolding_app_prefix
  bundler_prefix="$(hab pkg path core/bundler)"
  echo " *** SETTING ENV *** "
  env \
    -u RUBYOPT \
    -u GEMRC \
    GEM_HOME="$bundler_prefix" \
    GEM_PATH="$bundler_prefix" \
    "$(hab pkg path core/ruby27)/bin/ruby" "$bundler_prefix/bin/bundle.real" ${*:-}
}


exec chpst \
    -U {{ cfg.app.user }}:{{ cfg.app.group }} \
    -u {{ cfg.app.user }}:{{ cfg.app.group }} \
    _bundle exec unicorn -E {{ cfg.rails_env }} -c {{ pkg.svc_config_path }}/unicorn.rb $supermarket_path/app/config.ru 2>&1


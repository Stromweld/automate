daemon off;

worker_processes 4;
# error_log /dev/stderr error;

events {
  worker_connections 1024;
}

http {
  include        /app/config/mime.types;
  default_type   application/octet-stream;

  sendfile       on;
  tcp_nopush     on;
  tcp_nodelay    on;

  map_hash_bucket_size 128;

  client_body_in_file_only off;
  client_body_buffer_size 128k;
  client_max_body_size 2048m;
  large_client_header_buffers 4 8k;

  keepalive_timeout 60;
  keepalive_requests 10000;

  gzip on;
  gzip_comp_level 2;
  gzip_disable "MSIE [1-6]\.";
  gzip_http_version "1.0";
  gzip_min_length 10240;
  gzip_proxied expired no-cache no-store private auth;
  gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml;
  gzip_vary on;

  ssl_prefer_server_ciphers on;
  ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:!aNULL:!eNULL:!EXPORT:AES256-GCM-SHA384;
  ssl_protocols TLSv1.2 TLSv1.3;
  server_tokens off;

  client_body_temp_path /app/var/client-body;
  fastcgi_temp_path /app/var/fastcgi;
  proxy_temp_path /app/var/proxy;
  scgi_temp_path /app/var/scgi_temp_path;
  uwsgi_temp_path /app/var/uwsgi;

  log_format chef '$remote_user [$time_local]  '
                  '"$request" $status "$request_time" $body_bytes_sent '
                  '"$http_referer" "$http_user_agent" "$upstream_addr" "$upstream_status" "$upstream_response_time" $request_length';

#   access_log /dev/stdout chef;

  proxy_intercept_errors on;
  proxy_buffering on;
  proxy_buffers 8 8k;
  proxy_buffer_size 8k;
  proxy_busy_buffers_size 16k;

  upstream automate-dex {
    #  server 127.0.0.1:10117;
    server automate-dex
  }

  upstream automate-gateway {
    #  server 127.0.0.1:2000;
    server automate-gateway
     keepalive 8;
  }

  upstream automate-ui {
    #  server 127.0.0.1:10161;
    server automate-ui
  }

  upstream session-service {
    #  server 127.0.0.1:10115;
    server session-service;
  }

  include /app/config/*upstream.conf;
  include /app/config/automate-host-header-validation.conf;

  server {
    listen [::]:80 ipv6only=off;
    server_name a2-dev.test default;
    if ($istrusted = false){
       return 403;
    }
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains" always;
    add_header x-xss-protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    # TODO: I hate redirecting to https://host:443/ but handlebars has its limits :(
    return 301 https://$server_name:443$request_uri;
  }

  server {
    more_set_headers 'server: ';

    listen [::]:443 ssl http2 ipv6only=off;
    server_name ec2-43-204-143-69.ap-south-1.compute.amazonaws.com;

    ssl_certificate /app/certs/a2-dev.test.cert;
    ssl_certificate_key /app/certs/a2-dev.test.key;

    proxy_ssl_trusted_certificate /app/certs/root_ca.crt;
    proxy_ssl_certificate /app/certs/service.crt;
    proxy_ssl_certificate_key /app/certs/service.key;
    proxy_ssl_verify        on;

    # By default, we drop the X-Client-Cert header so a user cannot set it.
    # If a route wishes to allow it, they must use:
    # proxy_set_header X-Client-Cert $ssl_client_escaped_cert;
    #
    # NOTE: this behavior of nginx `proxy_set_header` directives:
    # > [`proxy_set_header`] directives are inherited from the previous level if
    # > and only if there are no proxy_set_header directives defined on the
    # > current level.
    # Thus, if you add any `proxy_set_header` to one of the `location`s below,
    # you must do *something* with the `X-Client-Cert` header.
    # Don't mess it up
    proxy_set_header X-Client-Cert "";

    # Required to make persistent connections happen
    proxy_http_version 1.1;
    proxy_set_header Connection "";

    # By default, we don't want anything cached, ever. The big exception is
    # automate-ui, with its own Cache-Control header below (location "/").
    #
    #     Note:
    # /!\ Any location block introducing its own add_header call MUST
    #     replicate these lines (see /dex/, /session/ below).
    #
    add_header Cache-Control "no-cache, no-store, must-revalidate";

    # Implement secure headers in accordance w/ owasp best practices
    # https://www.owasp.org/index.php/OWASP_Secure_Headers_Project#tab=Headers
    add_header x-xss-protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options DENY;

    location /automate.conf.js {
      add_header Cache-Control "private, no-cache, no-store";
      add_header x-xss-protection "1; mode=block" always;
      add_header Strict-Transport-Security "max-age=63072000; includeSubDomains" always;
      add_header X-Content-Type-Options "nosniff" always;
      alias /app/config/automate.conf.js;
      break;
    }

    location ~ .(assets/?)$ {
      return 404;
    }
    location ~ .(assets/img/?)$ {
      return 404;
    }
    location ~ .(assets/fonts/?)$ {
      return 404;
    }
    location ~ .(assets/chef-ui-library/?)$ {
      return 404;
    }

    location ~ .(dex/?)$ {
      return 404;
    }
    location ~ .(dex/static/?)$ {
      return 404;
    }
    location ~ .(dex/static/img/?)$ {
      return 404;
    }
    #######################################################################
    # Automate Gateway
    #######################################################################
    location /api/ {
      # automate-gateway serves two types of routes
      # - /api/v{0,1}, which really are our unversioned endpoints, and
      # - /apis/{versioned-endpoints}, like /apis/iam/v2/policies -- next location block
      rewrite /api/v1/(.*)$ /api/v0/$1 break; # we've never differentiated (or used) these
      proxy_set_header X-Client-Cert $ssl_client_escaped_cert;
      proxy_pass https://automate-gateway;
      # Required to make persistent connections happen
      proxy_set_header Connection "";
      add_header X-Content-Type-Options "nosniff" always;
      add_header x-xss-protection "1; mode=block" always;
      }

    location /apis/ {
      proxy_set_header X-Client-Cert $ssl_client_escaped_cert;
      proxy_pass https://automate-gateway;
      # Required to make persistent connections happen
      proxy_set_header Connection "";
      add_header X-Content-Type-Options "nosniff" always;
      add_header x-xss-protection "1; mode=block" always;
      }

    # serve legacy API for data-collection
    location /data-collector/v0 {
      proxy_set_header X-Client-Cert $ssl_client_escaped_cert;
      proxy_pass https://automate-gateway/api/v0/events/data-collector;
      # Required to make persistent connections happen
      proxy_set_header Connection "";
      add_header X-Content-Type-Options "nosniff" always;
      add_header x-xss-protection "1; mode=block" always;
      }

    location /compliance/profiles/ {
      proxy_set_header X-Client-Cert $ssl_client_escaped_cert;
      proxy_pass https://automate-gateway/api/v0/compliance/profiles/; # TODO does this append? Is this tested?
      # Required to make persistent connections happen
      proxy_set_header Connection "";
      add_header X-Content-Type-Options "nosniff" always;
      add_header x-xss-protection "1; mode=block" always;
      }

    #######################################################################
    # Auth System
    #######################################################################
    location /dex/ {
      proxy_pass https://automate-dex;
      proxy_set_header Connection ""; # Required to make persistent connections happen
      add_header X-Frame-Options sameorigin; # forbid other <iframe>ing
      add_header Cache-Control "no-cache, no-store, must-revalidate";
      add_header x-xss-protection "1; mode=block" always;
      add_header X-Content-Type-Options "nosniff" always;
      }

    location /session/ {
      proxy_pass https://session-service/;
      proxy_set_header Connection ""; # Required to make persistent connections happen
      add_header X-Frame-Options sameorigin; # forbid other <iframe>ing
      add_header Cache-Control "no-cache, no-store, must-revalidate";
      add_header x-xss-protection "1; mode=block" always;
      add_header X-Content-Type-Options "nosniff" always;
    }

    #######################################################################
    # Automate UI
    #######################################################################
    location / {
      proxy_pass https://automate-ui;
      proxy_set_header Connection ""; # Required to make persistent connections happen
      add_header X-Frame-Options sameorigin; # forbid other <iframe>ing
      add_header Cache-Control "private"; # allow caching, but no sharing of cached data
      add_header x-xss-protection "1; mode=block" always;
      add_header X-Content-Type-Options "nosniff" always;
    }

    location /custom_settings.js {
      proxy_pass https://automate-ui/custom_settings.js;
      proxy_set_header Connection ""; # Required to make persistent connections happen
      add_header X-Frame-Options sameorigin; # forbid other <iframe>ing
      add_header Cache-Control "private"; # allow caching, but no sharing of cached data
      add_header x-xss-protection "1; mode=block" always;
      add_header Strict-Transport-Security "max-age=63072000; includeSubDomains" always;
      add_header X-Content-Type-Options "nosniff" always;
    }

    include /hab/svc/automate-load-balancer/config/*location.conf;

  }

}